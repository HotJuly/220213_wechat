问题:当用户开始播放一首歌曲,离开song页面,再次进入,页面的C3效果与背景音频播放状态不一致
原因:离开页面,再次进入,会导致当前song页面初始化,而data中的数据也会变为初始数据,最终导致C3效果不一致的问题出现


需求:当用户进入song页面时,如果当前页面显示的歌曲和正在播放的背景音频是同一首歌,那么页面C3效果自动进入播放状态
拆解:
	1.当用户进入song页面时
		页面的生命周期其实就是一个最大的监听
		由于song页面每次离开都会卸载,所以进入的时候会触发三个生命周期
		我选择onLoad

	2.如果当前页面显示的歌曲和正在播放的背景音频是同一首歌
		继续拆解:
			1.当前页面显示的歌曲是哪一首?
				在onLoad中,通过options就可以得到当前歌曲的id
	
			2.背景音频是哪一首歌?
				在点击播放按钮的瞬间,就已经能确定正在播放的是哪一首
				其实我们是知道这个数据的,但是没保留住他,他会丢失

			3.背景音频是否正在播放?
				在点击播放按钮的瞬间,就已经能确定背景音频是否正在播放
				其实我们是知道这个数据的,但是没保留住他,他会丢失

				合并2和3的问题:如何在页面卸载之后,还能保留数据?
					Vue
						Vuex
							存储于内存中
							一般本次需要使用的数据,都会放在Vuex里
							优点:属于内存级别的操作,计算速度快

						localStorage
							存储于硬盘中
							一般以后需要使用的数据,都会放在localStorage里
							优点:属于硬盘级别的操作,数据可以永久存放
					
					小程序
						app实例对象
							永久不销毁:整个小程序只有一个app实例对象,该对象除非小程序关闭,否则不会销毁
							全局可见:页面通过调用getApp方法,可以获取到全局唯一的一个app实例对象
							
							读取属性:与普通对象没有区别
							修改属性:与普通对象没有区别
							取名规则:与普通对象没有区别
							总结:他就是个普通对象,注意他没有响应式的效果

						Storage

			4.如何判断两首歌是否是统一首歌?
				判断两首歌曲的id是否相同即可

	3.页面C3效果进入播放状态
		我们是通过页面的isPlay状态控制页面的C3效果